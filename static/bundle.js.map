{"version":3,"file":"bundle.js","sources":["../node_modules/matter-js/build/matter.js","../src/main.js"],"sourcesContent":["/**\n* matter-js 0.14.2 by @liabru 2018-06-11\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Used to require external libraries outside of the bundle.\n     * It first looks for the `globalName` on the environment's global namespace.\n     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n     * @private\n     * @method _requireGlobal\n     * @param {string} globalName The global module name\n     * @param {string} moduleName The fallback CommonJS module name\n     * @return {} The loaded module\n     */\n    Common._requireGlobal = function(globalName, moduleName) {\n        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\n        return obj || _dereq_(moduleName);\n    };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.14.2';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp;\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        if (!decomp) {\n            decomp = Common._requireGlobal('decomp', 'poly-decomp');\n        }\n\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../core/Common\":14,\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n","import Matter from \"matter-js\";\n\nconst {\n  Body,\n  Bodies,\n  Common,\n  Composites,\n  Constraint,\n  Engine,\n  Mouse,\n  MouseConstraint,\n  Render,\n  Runner,\n  World\n} = Matter;\n\nlet scale = 0.9;\n\nconst car = Composites.car(110, 0, 150 * scale, 30 * scale, 30 * scale);\nlet accel = 0;\nlet boost = 1;\n\ncar.bodies[1].friction = 0.9;\ncar.bodies[2].friction = 0.9;\nsetInterval(function() {\n  const carBody = car.bodies[0];\n  const carWheel1 = car.bodies[1];\n  const carWheel2 = car.bodies[2];\n  const carVel1 = carWheel1.angularVelocity;\n  const carVel2 = carWheel2.angularVelocity;\n  if (accel) {\n    const dx = accel * 0.05 * boost;\n\n    // Body.setVelocity(carBody, { y: carVel.y, x: carVel.x + dx });\n    //\n    // console.clear();\n    // console.log(carVel, dx);\n    Body.setAngularVelocity(carWheel1, carVel1 + dx);\n    Body.setAngularVelocity(carWheel2, carVel2 + dx);\n  }\n}, 100);\n\nconst group1 = Body.nextGroup(true);\n\nconst bridge = Composites.stack(160, 290, 10, 1, 0, 0, function(x, y) {\n  return Bodies.rectangle(x - 20, y, 53, 20, {\n    collisionFilter: { group: group1 },\n    chamfer: 5,\n    density: 0.005,\n    frictionAir: 0.05,\n    render: {\n      fillStyle: \"#575375\"\n    }\n  });\n});\n\nconst bridgeConstraint1 = Constraint.create({\n  pointA: { x: 210, y: 320 },\n  bodyB: bridge.bodies[0],\n  pointB: { x: -25, y: 0 },\n  length: 2,\n  stiffness: 0.9\n});\n\nconst bridgeConstraint2 = Constraint.create({\n  pointA: { x: 525, y: 320 },\n  bodyB: bridge.bodies[bridge.bodies.length - 1],\n  pointB: { x: 25, y: 0 },\n  length: 2,\n  stiffness: 0.9\n});\n\nComposites.chain(bridge, 0.3, 0, -0.3, 0, {\n  stiffness: 1,\n  length: 0,\n  render: {\n    visible: false\n  }\n});\n\nconst stack = Composites.stack(250, 50, 2, 4, 0, 0, function(x, y) {\n  return Bodies.rectangle(x, y, 20, 20, Common.random(20, 40));\n});\n\nconst stack2 = Composites.stack(450, 50, 8, 7, 0, 0, function(x, y) {\n  const circle = Bodies.circle(x, y, 10, Common.random(20, 40));\n  circle.friction = 0.3;\n  return circle;\n});\n\n// create engine\nconst engine = Engine.create(),\n  world = engine.world;\n\ndocument.body.addEventListener(\"keydown\", function(e) {\n  console.log(e.key);\n  switch (e.key) {\n    case \"ArrowRight\":\n      accel = 1;\n      e.preventDefault();\n      break;\n    case \"ArrowLeft\":\n      accel = -1;\n      e.preventDefault();\n      break;\n    case \" \":\n      boost = 10;\n      e.preventDefault();\n      break;\n    case \"Shift\":\n      engine.timing.timeScale = 0.2;\n      e.preventDefault();\n      break;\n  }\n});\n\ndocument.body.addEventListener(\"keyup\", function(e) {\n  switch (e.key) {\n    case \"ArrowRight\":\n    case \"ArrowLeft\":\n      accel = 0;\n      e.preventDefault();\n      break;\n    case \" \":\n      boost = 1;\n      e.preventDefault();\n      break;\n    case \"Shift\":\n      engine.timing.timeScale = 1;\n      e.preventDefault();\n      break;\n  }\n});\n\n// create renderer\nconst render = Render.create({\n  element: document.getElementById(\"game\"),\n  engine: engine,\n  options: {\n    width: 1200,\n    height: 700,\n    showAngleIndicator: true,\n    showCollisions: true\n  }\n});\n\nRender.run(render);\n\n// create runner\nconst runner = Runner.create();\nRunner.run(runner, engine);\n\n// add bodies\nWorld.add(world, [\n  // walls\n  Bodies.rectangle(400, 0, 800, 50, { isStatic: true }),\n  Bodies.rectangle(400, 600, 800, 50, { isStatic: true }),\n  Bodies.rectangle(800, 300, 50, 600, { isStatic: true }),\n  Bodies.rectangle(0, 300, 50, 600, { isStatic: true })\n]);\nWorld.add(world, [bridge, bridgeConstraint1, bridgeConstraint2]);\nWorld.add(world, stack);\nWorld.add(world, stack2);\n// World.add(world, cloth);\n\nWorld.add(world, car);\n\n// scale = 0.8;\n// World.add(world, Composites.car(350, 300, 150 * scale, 30 * scale, 30 * scale));\n\nWorld.add(world, [\n  Bodies.rectangle(100, 100, 150, 20, {\n    isStatic: true,\n    angle: 0\n  }),\n\n  Bodies.rectangle(350, 150, 400, 20, {\n    isStatic: true,\n    angle: Math.PI * 0.06\n  }),\n\n  Bodies.rectangle(650, 300, 250, 20, {\n    isStatic: true,\n    angle: -Math.PI * 0.06\n  }),\n\n  Bodies.rectangle(150, 320, 100, 20, {\n    isStatic: true,\n    angle: 0\n  }),\n  Bodies.rectangle(300, 560, 600, 20, {\n    isStatic: true,\n    angle: Math.PI * 0.04\n  })\n]);\n\n// add mouse control\nconst mouse = Mouse.create(render.canvas),\n  mouseConstraint = MouseConstraint.create(engine, {\n    mouse: mouse,\n    constraint: {\n      stiffness: 0.2,\n      render: {\n        visible: false\n      }\n    }\n  });\n\nWorld.add(world, mouseConstraint);\n\n// keep the mouse in sync with rendering\nrender.mouse = mouse;\n\n// fit the render viewport to the scene\nRender.lookAt(render, {\n  min: { x: 0, y: 0 },\n  max: { x: 800, y: 600 }\n});\n\n// run the engine\nEngine.run(engine);\n"],"names":["require","global","Body","Bodies","Common","Composites","Constraint","Engine","Mouse","MouseConstraint","Render","Runner","World","Matter","scale","car","accel","boost","bodies","friction","setInterval","carBody","carWheel1","carWheel2","carVel1","angularVelocity","carVel2","dx","setAngularVelocity","group1","nextGroup","bridge","stack","x","y","rectangle","collisionFilter","group","chamfer","density","frictionAir","render","fillStyle","bridgeConstraint1","create","pointA","bodyB","pointB","length","stiffness","bridgeConstraint2","chain","visible","random","stack2","circle","engine","world","document","body","addEventListener","e","console","log","key","preventDefault","timing","timeScale","element","getElementById","options","width","height","showAngleIndicator","showCollisions","run","runner","add","isStatic","angle","Math","PI","mouse","canvas","mouseConstraint","constraint","lookAt","min","max"],"mappings":"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"}